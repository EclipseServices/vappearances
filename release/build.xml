<?xml version="1.0" encoding="UTF-8"?>

<project basedir="." default="release" name="VAppearances">

    <tstamp>
        <format property="NOW" timezone="GMT" pattern="yyyy-MM-dd'T'HH:mm:ss'Z'"/>
    </tstamp>

    <!-- A Java 9 or later compiler is required -->

    <exec executable="/usr/libexec/java_home" outputproperty="jdk">
        <arg value="-F"/>
        <arg value="-v"/>
        <arg value="9+"/>
    </exec>

    <property name="javac" value="${jdk}/bin/javac"/>

    <!-- A Java 8 boot class path is required -->

    <exec executable="/usr/libexec/java_home" outputproperty="jdk8">
        <arg value="-F"/>
        <arg value="-v"/>
        <arg value="1.8"/>
    </exec>

    <property name="bootclasspath" value="${jdk8}/jre/lib/rt.jar" />

    <property name="RELEASE" value="0.9"/>
    <property name="fullReleaseName" value="${RELEASE} ${NOW}"/>

    <property name="base" value=".."/>
    <property name="src" value="${base}/src"/>
    <property name="jniname" value="libvappearances"/>
    <property name="jnisrc" value="${base}/${jniname}"/>
    <property name="resources" value="${base}/resources"/>
    <property name="builddir" value="out"/>
    <property name="classesdir" value="${builddir}/classes"/>
    <property name="headersdir" value="${builddir}/headers"/>
    <property name="jnidir" value="${builddir}/jni"/>
    <property name="distdir" value="dist"/>

    <property name="SDKroot" value="/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk" />
    <property name="libpath" value="${base}/lib/IdeaAnnotations.jar"/>
    <property name="cc" value="/usr/bin/cc"/>

    <property name="debug" value="false"/>

    <target name="init">
        <echo level="info" message="${fullReleaseName}"/>
    </target>

    <target name="clean" description="Remove build directories">
        <delete includeEmptyDirs="true" failonerror="false"><fileset dir="${builddir}"/></delete>
    </target>

    <target name="saveIDs">
      <echo file="${classesdir}/org/violetlib/vappearances/RELEASE.txt" message="${RELEASE}"/>
      <echo file="${classesdir}/org/violetlib/vappearances/BUILD.txt" message="${NOW}"/>
    </target>

    <target name="copyResources">
      <copy todir="${classesdir}">
        <fileset dir="${resources}">
          <include name="org/violetlib/**"/>
        </fileset>
      </copy>
    </target>

    <target name="compile8" depends="copyResources">
      <mkdir dir="${classesdir}"/>
      <mkdir dir="${headersdir}"/>

      <javac source="1.8" target="1.8"
          bootclasspath="${bootclasspath}"
          classpath="${libpath}"
          encoding="UTF-8"
          srcdir="${src}"
          destdir="${classesdir}"
          debug="${debug}"
          optimize="true"
          includeantruntime="false"
          fork="true"
          executable="${javac}"
          >
          <compilerarg value="-h"/>
          <compilerarg path="${headersdir}"/>
          <patternset>
            <include name="org/violetlib/vappearances/**/*.java"/>
          </patternset>
      </javac>
    </target>
    <target name="compile-Java" depends="compile8">
    </target>

    <target name="compile-JNI" depends="compile8">
        <mkdir dir="${jnidir}"/>

        <exec executable="${cc}" failonerror="true" >
            <arg value="-arch"/>
            <arg value="x86_64"/>

            <arg value="-isysroot"/>
            <arg value="${SDKroot}"/>
            <env key="MACOSX_DEPLOYMENT_TARGET" value="10.7"/>

            <arg value="-o"/>
            <arg value="${jnidir}/${jniname}.dylib"/>

            <arg value="-I${jdk}/include"/>
            <arg value="-I${jdk}/include/darwin"/>
            <arg value="-I${headersdir}"/>

            <arg value="-dynamiclib"/>
            <arg value="-ObjC"/>

            <arg value="-framework"/>
            <arg value="Cocoa"/>

            <arg value="-F/${SDKroot}/System/Library/Frameworks/JavaVM.framework/Versions/A/Frameworks"/>
            <arg value="-framework"/>
            <arg value="JavaNativeFoundation"/>

            <arg value="${jnisrc}/VAppearances.m"/>
        </exec>

    </target>

    <target name="VAppearances" depends="compile-JNI,compile-Java,saveIDs">

        <echo level="info" message="Building VAppearances ${fullReleaseName}"/>

        <mkdir dir="${distdir}"/>

        <jar jarfile="${distdir}/VAppearances.jar" basedir="${classesdir}">
            <fileset dir="${jnidir}/"/>
        </jar>
    </target>

    <target name="release" depends="clean,VAppearances"/>

</project>
